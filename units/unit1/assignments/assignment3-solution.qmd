---
title: "**Assignment 3:** Problem Solving Example"
format:
  html:
    code-copy: false
---

<html>
<head>
    <style>
        body {
            -webkit-user-select: none; /* Safari */
            -moz-user-select: none; /* Firefox */
            -ms-user-select: none; /* IE10+/Edge */
            user-select: none; /* Standard */
        }
    </style>
</head>
<body>

**Let's start with the outer while loop that reads an integer from the user each time:**

- **First review the pseudocode shown below:**
    
    ```python
    read an integer n
    while n > 0:
        compute number of divides
        read another integer into n
    ```

- **We can start writing the above pseudocode in Python in the following manner:**
    
    ```python
    n = int(input('Enter an integer: '))

    while n > 0:
        # Compute and print number of divides.
        n = int(input('Enter an integer: '))
    ```

:::{.callout-note}
**In the above code segment we have combined function calls.** 

- **Consider the following line of Python code:**
    
    ```python
    n = int(input('Enter an integer: '))
    ```
- **The above line of Python code could also have been written in the following manner:**

    ```python
    n_str = input('Enter an integer: ')
    n = int(n_str)
    ```
    - The first call prompts the user and gets a string. 
    - The second converts the string into an integer.
:::

:::{.callout-caution appearance="simple" icon="false"}
###### <span style="color:#8B4513;">**A3.1.1 Exercise:** </span>

- **Write up the above in `my_demo_problem1.py` and test out the `while` loop.**
- **Submit your program `my_demo_problem1.py`.**
:::

**Now, we want to successively divide by 2 (using integer division):**

- **Review the pseudocode as shown below:**
 
    ```python
    count = 0
    while n > 1:
        # divide by 2, increment count
    print(count)
    ```

- **We can start writing the above pseudocode in Python in the following manner:**
    
    ```python
    count = 0
    while n > 1:
        n = n // 2
        count += 1
    print('Number of divides for n=', n, ': ', count, sep='')
    ```

- **We can now include this in our outer `while`-loop as presented below:**
    
    ```python
    n = int(input('Enter an integer: '))

    while n > 0:
        # Compute and print number of divides.
        count = 0
        while n > 1:
            n = n // 2
            count += 1
        print('Number of divides for n=', n, ': ', count, sep='')
        # Get the next one.
        n = int(input('Enter an integer: '))

    print('Thank you!')
    ```

:::{.callout-caution appearance="simple" icon="false"}
###### <span style="color:#8B4513;">**A3.1.2 Exercise:** </span>

- **Write up the above in program in `my_demo_problem2.py`** 

- **Submit your program `my_demo_problem2.py`** 

- **Answering the following part of the exercise is recommended but not required for submission - It will help address the next exercise:**  
    - Examine the following sample output in the problem description and try to run your program `my_demo_problem2.py` with the inputs shown therein: 

        ```python
        Enter an integer: 14
        Number of divides for n=14: 3
        Enter an integer: 64
        Number of divides for n=64: 6
        Enter an integer: 33
        Number of divides for n=33: 5
        Enter an integer: -1
        Thank you!
        ``` 
    - Notice the output will not match exactly. 
:::

:::{.callout-caution appearance="simple" icon="false"}
###### <span style="color:#8B4513;">**A3.1.3 Exercise:** </span>
- **In `my_demo_problem3.py`** 

    - Modify the inner `while`-loop of the program `my_demo_problem2.py` to match the sample output for shown in earlier exercise **A3.1.2** (as also shown in the problem description).

- **Submit your program `my_demo_problem3.py`.**    
:::

**That solves the problem!** 

**Let's now explore a few alternative ways of writing the code:**

- **First, let's write the dividing part in a function as shown below:**
    
    ```python
    def num_divides(n):
        count = 0
        while n > 1:
            n = n // 2
            count += 1
        return count

    n = int(input('Enter an integer: '))

    while n > 0:
        count = num_divides(n)
        print('Number of divides for n=', n, ': ', count, sep='')
        n = int(input('Enter an integer: '))

    print('Thank you!')
    ```

:::{.callout-caution appearance="simple" icon="false"}
###### <span style="color:#8B4513;">**A3.1.4 Exercise:** </span>
- **Write up the above in `my_demo_problem4.py`.** 

- **Submit your program `my_demo_problem4.py`.**

- **Answering the following part of the exercise is recommended but not required for submission:** 

    - Explain to yourself why we were able to use the same variable `n` in the function, `num_divides()`.
:::

:::{.callout-note}
**We can observe the following in the above program:** 

- The `input`-statement outside the loop and 
- Then again, inside the loop. 

**We could ask the following question:** 

- Can we rewrite the `while` loop so that we get `input` only inside the loop?
- That is, can the outer loop structure look like this:
    
    ```python
    while n > 0:
        n = int(input('Enter an integer: '))
        # Do stuff ...
    ```
:::

:::{.callout-caution appearance="simple" icon="false"}
###### <span style="color:#8B4513;">**A3.1.5 Exercise:** </span>
**In `my_demo_problem5.py` show that this can indeed be done.** 

- Use a `break` statement. 
- Use the function `num_divides()` as given to you in the previous exercise A3.1.4.

**Submit your program `my_demo_problem5.py`.** 
:::

:::{.callout-note}
### If you got this far successfully, congratulations!
- Remember: You are saving all the programs in a directory called `assignment1`.
- You need to start addressing the remaning problems in `assignment3`, found [here](assignment3.qmd).
- After completing the remaining problems in this assignment, make a `zip` of the directory as `assignment3.zip` and submit it.
:::