---
title: "Assignment 0"
format:
  html:
    code-copy: false
---

<html>
<head>
    <style>
        body {
            -webkit-user-select: none; /* Safari */
            -moz-user-select: none; /* Firefox */
            -ms-user-select: none; /* IE10+/Edge */
            user-select: none; /* Standard */
        }
    </style>
</head>
<body>

<!-- <div class="breadcrumbs">
  <a href="../../../index.qmd">Home</a> &raquo;
  <a href="">Unit 0</a> &raquo;
  <span class="current-page">Assignment 0</span>
</div> -->

::: {.callout-warning}
Do this assignment on your own. You may not consult any other students. You are not allowed to use any online resources to complete this assignment other than the course website. This assignment is to be completed and submitted on Blackboard. All examinations, papers, quizzes and other graded work products and assignments are to be completed in conformance with The George Washington University Code of Academic Integrity. Any violations will be treated as violations of the Code of Academic Integrity.
:::

## Objectives and example
Assignments are designed to strengthen your problem-solving skills and build <em>independence</em>. While the module exercises are small variations of explained module examples, a single assignment will have multiple problems, all of which are intended to be more challenging than the module exercises, and will feature less detailed guidance. This is a good thing because ultimately, you'll have to solve problems on your own. Facing and overcoming challenging problems cheerfully is the key to building problem-solving skill.

::: {.callout-tip title="Tip"}
In this assignment set, we will help develop your problem-solving skills by showing you how to solve one problem, the first and often hardest problem. <em>However, the solution will include some exercises for you that you will need to submit</em>.
:::

## Assignment problems

### 1. Demo problem
Suppose we want to use for-loops to produce this arrow-head like pattern:
```python
*
**
***
****
*****
******
*******
********
*********
**********
**********
*********
********
*******
******
*****
****
***
**
*
```
At this point, do not read further and try to address the following:

- First understand what is being asked.
- Do you see a for-loop or two at work where, as the loops are printing, you'll get the output shown above?
- Can the problem be broken down into parts, where you can solve the parts and put the solution together afterwards?
- Try writing some code to get at least some of the output.

[**Now examine the solution through various guided exercises presented here**](./assignment0-solution.qmd)

::: {.callout-tip}
### You are required to submit your solutions to the **exercises** within this demo problem.
Don't forget to submit your solutions to the exercises within the demo problem while you are being asked to examine the solution through the guided exercises presented to you [**here**](assignment0-solution.qmd).
:::

### 2. In `my_nested.py` use nested loops to print the following pattern:
```python
10 1 10
20 1 10
30 1 10
40 1 10
10 2 20
20 2 20
30 2 20
40 2 20
10 3 30
20 3 30
30 3 30
40 3 30
10 4 40
20 4 40
30 4 40
40 4 40
```

### 3. In `my_nested2.py`, write a program that uses nested for-loops to print the following pattern:

```python
**********10
********* 9
********  8
*******   7
******    6
*****     5
****      4
***       3
**        2
*         1
```

Notice that the each row of **\*-characters** is ending with the count or the number of ***-characters** in that particular row.

### 4. In this exercise you will use a drawing tool and a for-loop to draw a series of rectangles. The goal is to draw this:

:::{.callout-tip}
Before proceeding with this question you would need to install `matplotlib` library. Follow these guides to learn about how to install packages in Thonny on a [**Mac**](../guides/thonny-mac-matplotlib.qmd) or [**Windows**](../guides/thonny-win-matplotlib.qmd) computer.
:::

![](../../../media/units/unit0/assignment0/Figure_Assign0Prob4.png)

The code for drawing a single rectangle is:
```python
from drawtool import DrawTool 

dt = DrawTool()
dt.set_XY_range(0,100, 0,100)

dt.draw_rectangle(10, 20, 5, 10)

dt.display()
```
This produces (we've added some markup to explain):
![](../../../media/units/unit0/assignment0/FigureExplan_Assign0Prob4.png)

As a first step, download <a href="../../../media/useful/drawtool.py" download>**drawtool.py**</a> into your `assignment0` folder and type up the above single-rectangle example in `my_rectangle_example.py`. This way, you know that the download worked and that drawing works. Now you can focus on the many-rectangle problem. Think about how the for-loop needs to range so that you can draw the rectangles in the loop. Write your program in `my_rectangle_pattern.py`.

- For this problem you are saving the following three files toward the submission:
  - `drawtool.py`
  - `my_rectangle_example.py`
  - `my_rectangle_pattern.py`

:::{.callout-tip}
Use `dt.draw_filled_rectangle()` to implement a filled rectangle in your python script.
:::

### 5. The python program below intends to print a few lines from a poem by Rudyard Kipling in the manner presented:

```python
If you can force your heart and nerve and sinew
 To serve your turn long after they are gone,   
And so hold on when there is nothing in you
 Except the Will which says to them: 'Hold on!'
```
Notice that even numbered lines are indented by one space.

The alleged program is presented below:
```python
print('If you can force your heart and nerve and sinew")
print('To serve your turn long after they are gone,')   
print("And so hold on when there is nothing in you')
print(' Except the Will which says to them: 'Hold on!)
```
There are several errors in the above program. Fix the program and save it in `fixed_KiplingPoemLines.py`. Submit your working program.

### 6. The following program intends to print the following five times as in:

  ```python
GeorgeWashington@gwu.edu
GeorgeWashington@gwu.edu
GeorgeWashington@gwu.edu
GeorgeWashington@gwu.edu
GeorgeWashington@gwu.edu
```

The alleged program is presented below:
```python
Def print_GWUEmail():
for i in range(1,5):
    print(GeorgeWashington, gwu.edu, sep='@')

print_GWUEmail
```
There are several errors in the above program. Fix the program and save it in `fixed_GWUEmail.py`. Submit your working program.

### 7. The python program below intends to print the numbers 5 through 0 in the manner presented:
```python
     5
    4
   3
  2
 1
0
```
The number of empty-spaces is printed at the end of the row.  
The alleged program is presented below:
```python
def function#2()
    for i in range(5,-1, 0):
        print(i)

function#2()
```
There are several errors in the above program. Fix the program and save it in `fixed_downprint.py`. Submit your working program.

<!-- ### 8. In each assignment, we will include a sometimes whimsical, sometimes serious non-coding exploration to encourage creativity and curiousity. For this assignment, in your `assignment1.pdf`, make a cartoon that makes light of "frustration with computers". You can use a simple drawing tool, or find images that are copyright-free (please include the link to images/cartoons). Make sure the caption is <em>original</em> (this is the whole point). We'll post some of the funniest ones. -->

:::{.callout-warning}
## How to submit:
- Write all your programs in a directory called `assignment0`.
- After completing the all problems in this assignment, make a `zip` of the directory as `assignment0.zip` and submit it on Blackboard.
:::
</body>
</html>